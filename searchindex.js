Search.setIndex({"docnames": ["api", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "generated/cvpy.base.ImageTable.ImageTable", "generated/cvpy.base.ImageTable.ImageTable.as_dict", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images", "generated/cvpy.biomedimage.BiomedImage.BiomedImage", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.mask_image", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity", "generated/cvpy.image.Image.Image", "generated/cvpy.image.Image.Image.convert_numpy_to_wide", "generated/cvpy.image.Image.Image.convert_to_CAS_column", "generated/cvpy.image.Image.Image.convert_wide_to_numpy", "generated/cvpy.image.Image.Image.fetch_geometry_info", "generated/cvpy.image.Image.Image.fetch_image_array", "generated/cvpy.image.Image.Image.get_image_array", "generated/cvpy.image.Image.Image.get_image_array_const_ctype", "generated/cvpy.image.Image.Image.get_image_array_from_row", "generated/cvpy.image.Image.Image.mask_image", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "generated/cvpy.visualization.display_3D_image_slices", "generated/cvpy.visualization.display_3D_image_slices_from_array", "generated/cvpy.visualization.display_3D_surface", "generated/cvpy.visualization.display_image_slice", "index", "installation", "license"], "filenames": ["api.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times.rst", "generated/cvpy.base.ImageTable.ImageTable.rst", "generated/cvpy.base.ImageTable.ImageTable.as_dict.rst", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.mask_image.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity.rst", "generated/cvpy.image.Image.Image.rst", "generated/cvpy.image.Image.Image.convert_numpy_to_wide.rst", "generated/cvpy.image.Image.Image.convert_to_CAS_column.rst", "generated/cvpy.image.Image.Image.convert_wide_to_numpy.rst", "generated/cvpy.image.Image.Image.fetch_geometry_info.rst", "generated/cvpy.image.Image.Image.fetch_image_array.rst", "generated/cvpy.image.Image.Image.get_image_array.rst", "generated/cvpy.image.Image.Image.get_image_array_const_ctype.rst", "generated/cvpy.image.Image.Image.get_image_array_from_row.rst", "generated/cvpy.image.Image.Image.mask_image.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count.rst", "generated/cvpy.visualization.display_3D_image_slices.rst", "generated/cvpy.visualization.display_3D_image_slices_from_array.rst", "generated/cvpy.visualization.display_3D_surface.rst", "generated/cvpy.visualization.display_image_slice.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["API Reference", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "cvpy.base.ImageTable.ImageTable", "cvpy.base.ImageTable.ImageTable.as_dict", "cvpy.base.ImageTable.ImageTable.has_decoded_images", "cvpy.biomedimage.BiomedImage.BiomedImage", "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image", "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient", "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity", "cvpy.image.Image.Image", "cvpy.image.Image.Image.convert_numpy_to_wide", "cvpy.image.Image.Image.convert_to_CAS_column", "cvpy.image.Image.Image.convert_wide_to_numpy", "cvpy.image.Image.Image.fetch_geometry_info", "cvpy.image.Image.Image.fetch_image_array", "cvpy.image.Image.Image.get_image_array", "cvpy.image.Image.Image.get_image_array_const_ctype", "cvpy.image.Image.Image.get_image_array_from_row", "cvpy.image.Image.Image.mask_image", "cvpy.utils.CASThreadTuner.CASThreadTuner", "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "cvpy.visualization.display_3D_image_slices", "cvpy.visualization.display_3D_image_slices_from_array", "cvpy.visualization.display_3D_surface", "cvpy.visualization.display_image_slice", "SAS Viya Computer Vision API for Python", "Installation", "License"], "terms": {"class": [1, 2, 3, 6, 8, 9, 10, 20, 21, 28], "cas_server_mod": 1, "casservermod": 1, "none": [1, 3, 6, 7, 8, 9, 10, 19, 21], "controller_thread_rang": [1, 21], "rang": [1, 21], "worker_thread_rang": [1, 21], "objective_measur": [1, 21], "statist": [1, 21], "controller_optimal_thread_count": 1, "int": [1, 7, 8, 14, 15, 16, 17, 18, 21, 22, 25], "worker_optimal_thread_count": 1, "mean_exec_tim": 1, "list": [1, 7, 8, 19, 28], "median_exec_tim": 1, "minimum_exec_tim": 1, "maximum_exec_tim": 1, "stdev_exec_tim": 1, "store": 1, "present": 1, "result": [1, 2, 26, 28], "ca": [1, 2, 6, 8, 9, 10, 12, 14, 15, 17, 21, 22, 26], "thread": [1, 2, 21, 26], "optim": [1, 21], "tool": [1, 26], "paramet": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25], "specifi": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25], "server": 1, "architectur": 1, "control": [1, 21, 28], "node": [1, 21], "each": [1, 3, 8, 21, 28], "worker": [1, 21], "object": [1, 4, 8, 9, 21, 28], "measur": [1, 21], "perform": [1, 2, 21, 28], "over": [1, 21], "given": [1, 2, 9, 21], "iter": [1, 21], "count": [1, 17, 21], "mean": [1, 21, 28], "record": 1, "execut": [1, 28], "time": 1, "median": [1, 21], "minimum": [1, 21, 25], "maximum": [1, 21, 25], "standard": 1, "deviat": 1, "__init__": [1, 3, 6, 10, 20], "construct": [1, 8, 9], "method": [1, 3, 6, 10, 20], "attribut": [1, 3, 6, 10, 28], "fig_width": 2, "float": [2, 9, 21, 24], "8": [2, 27, 28], "fig_height": 2, "figur": 2, "plot": 2, "tuner": [2, 26], "width": [2, 8], "height": [2, 8], "return": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "matplotlib": [2, 26], "tabl": [3, 5, 7, 8, 9, 14, 15, 17, 19], "castabl": [3, 7, 8, 9, 14, 19], "imag": [3, 5, 6, 7, 8, 9, 21, 22, 23, 24, 25, 26], "str": [3, 8, 12, 14, 15, 17, 18, 22, 25], "dimens": [3, 14, 15, 16, 17, 18, 25], "resolut": [3, 15, 16, 17, 18, 25], "imageformat": 3, "path": 3, "label": 3, "id": 3, "size": 3, "type": [3, 15, 17, 28], "interfac": [3, 28], "input": [3, 7, 9, 19, 25], "contain": [3, 4, 5, 8, 9, 14, 28], "data": [3, 15, 26, 27], "name": [3, 12, 28], "column": [3, 7, 8, 12, 14, 19], "binari": [3, 9, 16, 17, 18], "format": [3, 15, 16, 18, 25, 28], "file": [3, 27, 28], "variabl": 3, "identifi": [3, 28], "byte": [3, 11, 13, 18], "length": 3, "dict": 4, "creat": 4, "dictionari": 4, "represent": 4, "thi": [4, 5, 26, 28], "d": [4, 28], "all": [4, 28], "properti": 4, "kei": 4, "valu": [4, 9], "bool": [5, 7, 9, 19, 22, 23, 24], "check": 5, "decod": [5, 7, 19], "encod": 5, "b": [5, 28], "true": [5, 9, 22, 23, 24], "otherwis": [5, 28], "fals": [5, 7, 19, 22, 23, 24], "cas_sess": [6, 10], "implement": [6, 10], "biomed": [6, 26], "process": [6, 10], "function": [6, 10, 21], "session": [6, 10, 21], "imaget": [7, 8, 9, 19, 26], "mask": [7, 19], "casout": [7, 19], "input_background": [7, 9], "0": [7, 14, 15, 22, 23, 24, 25, 26, 28], "output_background": 7, "add_column": 7, "copy_var": [7, 8, 19], "appli": [7, 19, 28], "an": [7, 16, 17, 19, 21, 24, 25, 27, 28], "us": [7, 9, 19, 27, 28], "pixel": 7, "intens": 7, "background": [7, 9], "swat": [7, 8, 9, 14, 19, 22, 24, 27], "output": [7, 8, 9, 19], "whether": [7, 19, 28], "enum": [7, 19, 21], "metadata": 7, "ad": 7, "which": [7, 8, 19, 28], "copi": [7, 8, 19, 28], "kernel_width": 8, "3": [8, 27, 28], "kernel_height": 8, "comput": [8, 21, 28], "morpholog": 8, "gradient": 8, "3d": [8, 18, 22, 23, 25], "grayscal": 8, "kernel": 8, "exampl": [8, 9, 27, 28], "import": [8, 9, 28], "from": [8, 9, 14, 15, 16, 17, 18, 26, 27, 28], "base": [8, 9, 26, 28], "connect": [8, 9, 22], "": [8, 9, 12, 28], "com": [8, 9, 26, 27], "5570": [8, 9], "biom": [8, 9], "pass": 8, "api": [8, 9], "image_t": [8, 9], "input_t": [8, 9], "call": [8, 9, 21], "output_t": [8, 9], "quantify_spher": [8, 26], "use_spac": 9, "label_connect": 9, "labelconnect": 9, "spheric": 9, "quantifi": 9, "compon": 9, "when": [9, 22, 23, 24], "set": [9, 21, 22, 23, 24, 26], "space": [9, 14], "calcul": 9, "face": [9, 24], "vertex": 9, "level": [9, 26], "ar": [9, 27, 28], "static": [11, 12, 13, 14, 15, 16, 17, 18, 21], "numpy_arrai": 11, "ndarrai": [11, 13, 15, 16, 17, 18, 21, 23], "convert": [11, 12, 13], "numpi": [11, 13, 15, 16, 17, 18, 23, 27], "arrai": [11, 13, 15, 16, 17, 23], "wide": [11, 13], "np": 11, "string": 12, "wide_imag": 13, "buffer": 13, "imdata": [14, 15], "n": [14, 15, 16, 17], "qry": [14, 15], "poscol": 14, "_position_": 14, "oricol": 14, "_orientation_": 14, "spacol": 14, "_spacing_": 14, "dimcol": 14, "_dimension_": [14, 15], "fetch": [14, 15, 16, 24, 26], "geometri": 14, "inform": [14, 28], "number": [14, 15, 16, 18, 21], "queri": [14, 15], "posit": [14, 25], "orient": [14, 25], "tupl": [14, 24, 25], "_image_": 15, "dim": [15, 25], "re": 15, "_resolution_": 15, "ctype": [15, 17], "_channeltype_": 15, "ccount": 15, "1": [15, 16, 17, 18, 24, 26, 27, 28], "addit": [15, 25, 28], "channel": [15, 16, 17, 18], "image_binari": [16, 17, 18], "channel_count": [16, 17, 18], "get": [16, 17, 18], "panda": [16, 17, 25], "seri": [16, 17, 25], "index": [16, 17, 22, 25], "option": [16, 18], "ha": [16, 18, 28], "constant": 17, "myformat": 18, "row": 18, "arg": 20, "kwarg": 20, "action_funct": 21, "callabl": 21, "setup_funct": 21, "teardown_funct": 21, "5": [21, 27, 28], "4": [21, 28], "65": 21, "casthreadtunerresult": [21, 26], "action": [21, 26], "user": [21, 26, 27], "defin": [21, 28], "up": 21, "environ": [21, 27], "termin": [21, 28], "combin": [21, 28], "enummeta": 21, "stdev": 21, "__main__": 21, "self": 22, "hold": [22, 23, 24, 28], "slice_index_x": [22, 23], "slice_index_i": [22, 23], "slice_index_z": [22, 23], "displai": [22, 23, 24, 25, 28], "slice": [22, 23, 25], "i": [22, 23, 24, 26, 27, 28], "held": [22, 23, 24], "x": 22, "axi": 22, "y": 22, "z": 22, "surfac": 24, "vdata": 24, "fdata": 24, "color": 24, "op": 24, "sasdatafram": 24, "vertic": 24, "opac": 24, "ress": 25, "fmt": 25, "poss": 25, "ori": 25, "sca": 25, "perm": 25, "image_index": 25, "slice_index": 25, "rf": 25, "imin": 25, "100": 25, "imax": 25, "400": 25, "scale": 25, "permiss": [25, 28], "date": [26, 28], "feb": 26, "21": 26, "2023": 26, "version": [26, 27, 28], "dev": 26, "sourc": [26, 28], "repositori": [26, 27], "http": [26, 27, 28], "github": [26, 27], "sassoftwar": [26, 27], "cvpy": 26, "issu": [26, 28], "idea": 26, "support": [26, 28], "document": [26, 28], "onlinedoc": 26, "html": 26, "high": 26, "librari": 26, "assist": 26, "biomedimag": 26, "provid": [26, 28], "help": 26, "visual": [26, 27], "These": 26, "allow": 26, "easili": 26, "abl": 26, "move": 26, "out": [26, 28], "common": [26, 28], "open": 26, "mayavi": 26, "streamlin": 26, "further": 26, "analysi": 26, "we": [26, 28], "welcom": 26, "your": [26, 27, 28], "pleas": [26, 27], "read": 26, "md": 26, "detail": [26, 27], "how": [26, 28], "submit": [26, 28], "project": 26, "under": [26, 28], "apach": [26, 28], "2": [26, 27, 28], "see": [26, 27, 28], "full": [26, 27], "page": [26, 28], "instal": 26, "prerequisit": 26, "refer": 26, "mask_imag": 26, "morphological_gradi": 26, "util": 26, "casthreadtun": 26, "tune_thread_count": 26, "plot_exec_tim": 26, "convert_to_cas_column": 26, "convert_wide_to_numpi": 26, "convert_numpy_to_wid": 26, "fetch_geometry_info": 26, "fetch_image_arrai": 26, "get_image_array_from_row": 26, "get_image_arrai": 26, "get_image_array_const_ctyp": 26, "as_dict": 26, "has_decoded_imag": 26, "display_image_slic": 26, "display_3d_image_slices_from_arrai": 26, "display_3d_image_slic": 26, "display_3d_surfac": 26, "To": [27, 28], "access": 27, "capabl": 27, "you": [27, 28], "need": 27, "follow": [27, 28], "python": 27, "greater": 27, "can": 27, "anaconda": 27, "distribut": [27, 28], "anoth": 27, "choic": 27, "sa": 27, "script": 27, "wrapper": 27, "analyt": 27, "transfer": [27, 28], "packag": 27, "viya": 27, "activ": 27, "mine": 27, "machin": 27, "learn": 27, "vdmml": 27, "licens": 27, "scientif": 27, "also": [27, 28], "valid": 27, "credenti": 27, "backend": 27, "system": [27, 28], "administr": 27, "do": [27, 28], "have": [27, 28], "account": 27, "The": [27, 28], "written": [27, 28], "jupyt": 27, "notebook": 27, "If": [27, 28], "wish": 27, "run": 27, "own": [27, 28], "must": [27, 28], "still": 27, "view": 27, "browser": 27, "websit": 27, "heavi": 27, "complex": 27, "requir": [27, 28], "alreadi": 27, "step": 27, "below": [27, 28], "vtk": 27, "critic": 27, "depend": 27, "pip": 27, "cp37": 27, "cp37m": 27, "win_amd64": 27, "whl": 27, "note": 27, "specif": [27, 28], "download": 27, "wheel": 27, "here": 27, "mai": [27, 28], "error": 27, "messag": 27, "about": 27, "like": 27, "build": 27, "correctli": 27, "first": 27, "ignor": 27, "pyqt": 27, "gui": 27, "toolkit": 27, "pyqt5": 27, "command": 27, "git": 27, "januari": 28, "2004": 28, "www": 28, "org": 28, "term": 28, "AND": 28, "condit": 28, "FOR": 28, "reproduct": 28, "definit": 28, "shall": 28, "section": 28, "through": 28, "9": 28, "licensor": 28, "copyright": 28, "owner": 28, "entiti": 28, "author": 28, "grant": 28, "legal": 28, "union": 28, "act": 28, "other": 28, "For": 28, "purpos": 28, "power": 28, "direct": 28, "indirect": 28, "caus": 28, "manag": 28, "contract": 28, "ii": 28, "ownership": 28, "fifti": 28, "percent": 28, "50": 28, "more": 28, "outstand": 28, "share": 28, "iii": 28, "benefici": 28, "individu": 28, "exercis": 28, "form": 28, "prefer": 28, "make": 28, "modif": 28, "includ": 28, "limit": 28, "softwar": 28, "code": 28, "configur": 28, "ani": 28, "mechan": 28, "transform": 28, "translat": 28, "compil": 28, "gener": 28, "convers": 28, "media": 28, "work": 28, "authorship": 28, "made": 28, "avail": 28, "indic": 28, "notic": 28, "attach": 28, "appendix": 28, "deriv": 28, "editori": 28, "revis": 28, "annot": 28, "elabor": 28, "repres": 28, "whole": 28, "origin": 28, "remain": 28, "separ": 28, "mere": 28, "link": 28, "bind": 28, "thereof": 28, "contribut": 28, "intention": 28, "inclus": 28, "behalf": 28, "electron": 28, "verbal": 28, "commun": 28, "sent": 28, "its": 28, "mail": 28, "track": 28, "discuss": 28, "improv": 28, "exclud": 28, "conspicu": 28, "mark": 28, "design": 28, "write": 28, "Not": 28, "contributor": 28, "whom": 28, "been": 28, "receiv": 28, "subsequ": 28, "incorpor": 28, "within": 28, "subject": 28, "herebi": 28, "perpetu": 28, "worldwid": 28, "non": 28, "exclus": 28, "charg": 28, "royalti": 28, "free": 28, "irrevoc": 28, "reproduc": 28, "prepar": 28, "publicli": 28, "sublicens": 28, "patent": 28, "except": 28, "state": 28, "offer": 28, "sell": 28, "where": 28, "onli": 28, "those": 28, "claim": 28, "necessarili": 28, "infring": 28, "alon": 28, "wa": 28, "institut": 28, "litig": 28, "against": 28, "cross": 28, "counterclaim": 28, "lawsuit": 28, "alleg": 28, "constitut": 28, "contributori": 28, "redistribut": 28, "medium": 28, "without": 28, "meet": 28, "give": 28, "recipi": 28, "modifi": 28, "carri": 28, "promin": 28, "chang": 28, "c": 28, "retain": 28, "trademark": 28, "pertain": 28, "part": 28, "text": 28, "readabl": 28, "least": 28, "one": 28, "place": 28, "along": 28, "wherev": 28, "third": 28, "parti": 28, "normal": 28, "appear": 28, "content": 28, "add": 28, "alongsid": 28, "addendum": 28, "cannot": 28, "constru": 28, "statement": 28, "differ": 28, "compli": 28, "submiss": 28, "unless": 28, "explicitli": 28, "notwithstand": 28, "abov": 28, "noth": 28, "herein": 28, "supersed": 28, "agreement": 28, "regard": 28, "6": 28, "doe": 28, "trade": 28, "servic": 28, "product": 28, "reason": 28, "customari": 28, "describ": 28, "7": 28, "disclaim": 28, "warranti": 28, "applic": 28, "law": 28, "agre": 28, "AS": 28, "basi": 28, "OR": 28, "OF": 28, "kind": 28, "either": 28, "express": 28, "impli": 28, "titl": 28, "merchant": 28, "fit": 28, "A": 28, "particular": 28, "sole": 28, "respons": 28, "determin": 28, "appropri": 28, "assum": 28, "risk": 28, "associ": 28, "liabil": 28, "In": 28, "event": 28, "theori": 28, "tort": 28, "neglig": 28, "deliber": 28, "grossli": 28, "liabl": 28, "damag": 28, "special": 28, "incident": 28, "consequenti": 28, "charact": 28, "aris": 28, "inabl": 28, "loss": 28, "goodwil": 28, "stoppag": 28, "failur": 28, "malfunct": 28, "commerci": 28, "even": 28, "advis": 28, "possibl": 28, "accept": 28, "while": 28, "choos": 28, "fee": 28, "indemn": 28, "oblig": 28, "right": 28, "consist": 28, "howev": 28, "indemnifi": 28, "defend": 28, "harmless": 28, "incur": 28, "assert": 28, "end": 28, "boilerpl": 28, "field": 28, "enclos": 28, "bracket": 28, "replac": 28, "don": 28, "t": 28, "should": 28, "comment": 28, "syntax": 28, "recommend": 28, "descript": 28, "same": 28, "print": 28, "easier": 28, "identif": 28, "archiv": 28, "yyyi": 28, "complianc": 28, "obtain": 28, "languag": 28, "govern": 28}, "objects": {"": [[26, 0, 0, "-", "cvpy"]], "cvpy.base.CASThreadTunerResults": [[1, 1, 1, "", "CASThreadTunerResults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[1, 2, 1, "", "__init__"], [2, 2, 1, "", "plot_exec_times"]], "cvpy.base.ImageTable": [[3, 1, 1, "", "ImageTable"]], "cvpy.base.ImageTable.ImageTable": [[3, 2, 1, "", "__init__"], [4, 2, 1, "", "as_dict"], [5, 2, 1, "", "has_decoded_images"]], "cvpy.biomedimage.BiomedImage": [[6, 1, 1, "", "BiomedImage"]], "cvpy.biomedimage.BiomedImage.BiomedImage": [[6, 2, 1, "", "__init__"], [7, 2, 1, "", "mask_image"], [8, 2, 1, "", "morphological_gradient"], [9, 2, 1, "", "quantify_sphericity"]], "cvpy.image.Image": [[10, 1, 1, "", "Image"]], "cvpy.image.Image.Image": [[10, 2, 1, "", "__init__"], [11, 2, 1, "", "convert_numpy_to_wide"], [12, 2, 1, "", "convert_to_CAS_column"], [13, 2, 1, "", "convert_wide_to_numpy"], [14, 2, 1, "", "fetch_geometry_info"], [15, 2, 1, "", "fetch_image_array"], [16, 2, 1, "", "get_image_array"], [17, 2, 1, "", "get_image_array_const_ctype"], [18, 2, 1, "", "get_image_array_from_row"], [19, 2, 1, "", "mask_image"]], "cvpy.utils.CASThreadTuner": [[20, 1, 1, "", "CASThreadTuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[20, 2, 1, "", "__init__"], [21, 2, 1, "", "tune_thread_count"]], "cvpy.visualization": [[22, 3, 1, "", "display_3D_image_slices"], [23, 3, 1, "", "display_3D_image_slices_from_array"], [24, 3, 1, "", "display_3D_surface"], [25, 3, 1, "", "display_image_slice"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 26], "refer": 0, "biomed": 0, "imag": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "ca": 0, "thread": 0, "tuner": 0, "result": 0, "imaget": [0, 3, 4, 5], "visual": [0, 22, 23, 24, 25], "cvpy": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "base": [1, 2, 3, 4, 5], "casthreadtunerresult": [1, 2], "plot_exec_tim": 2, "as_dict": 4, "has_decoded_imag": 5, "biomedimag": [6, 7, 8, 9], "mask_imag": [7, 19], "morphological_gradi": 8, "quantify_spher": 9, "convert_numpy_to_wid": 11, "convert_to_cas_column": 12, "convert_wide_to_numpi": 13, "fetch_geometry_info": 14, "fetch_image_arrai": 15, "get_image_arrai": 16, "get_image_array_const_ctyp": 17, "get_image_array_from_row": 18, "util": [20, 21], "casthreadtun": [20, 21], "tune_thread_count": 21, "display_3d_image_slic": 22, "display_3d_image_slices_from_arrai": 23, "display_3d_surfac": 24, "display_image_slic": 25, "sa": 26, "viya": 26, "comput": 26, "vision": 26, "python": 26, "overview": 26, "contribut": 26, "licens": [26, 28], "addit": 26, "resourc": 26, "tabl": 26, "content": 26, "index": 26, "instal": 27, "prerequisit": 27, "mayavi": 27}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Biomedical Images": [[0, "biomedical-images"]], "CAS Thread Tuner": [[0, "cas-thread-tuner"]], "CAS Thread Tuner Results": [[0, "cas-thread-tuner-results"]], "Image": [[0, "image"]], "ImageTable": [[0, "imagetable"]], "Visualization Reference": [[0, "visualization-reference"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[1, "cvpy-base-casthreadtunerresults-casthreadtunerresults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times": [[2, "cvpy-base-casthreadtunerresults-casthreadtunerresults-plot-exec-times"]], "cvpy.base.ImageTable.ImageTable": [[3, "cvpy-base-imagetable-imagetable"]], "cvpy.base.ImageTable.ImageTable.as_dict": [[4, "cvpy-base-imagetable-imagetable-as-dict"]], "cvpy.base.ImageTable.ImageTable.has_decoded_images": [[5, "cvpy-base-imagetable-imagetable-has-decoded-images"]], "cvpy.biomedimage.BiomedImage.BiomedImage": [[6, "cvpy-biomedimage-biomedimage-biomedimage"]], "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image": [[7, "cvpy-biomedimage-biomedimage-biomedimage-mask-image"]], "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient": [[8, "cvpy-biomedimage-biomedimage-biomedimage-morphological-gradient"]], "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity": [[9, "cvpy-biomedimage-biomedimage-biomedimage-quantify-sphericity"]], "cvpy.image.Image.Image": [[10, "cvpy-image-image-image"]], "cvpy.image.Image.Image.convert_numpy_to_wide": [[11, "cvpy-image-image-image-convert-numpy-to-wide"]], "cvpy.image.Image.Image.convert_to_CAS_column": [[12, "cvpy-image-image-image-convert-to-cas-column"]], "cvpy.image.Image.Image.convert_wide_to_numpy": [[13, "cvpy-image-image-image-convert-wide-to-numpy"]], "cvpy.image.Image.Image.fetch_geometry_info": [[14, "cvpy-image-image-image-fetch-geometry-info"]], "cvpy.image.Image.Image.fetch_image_array": [[15, "cvpy-image-image-image-fetch-image-array"]], "cvpy.image.Image.Image.get_image_array": [[16, "cvpy-image-image-image-get-image-array"]], "cvpy.image.Image.Image.get_image_array_const_ctype": [[17, "cvpy-image-image-image-get-image-array-const-ctype"]], "cvpy.image.Image.Image.get_image_array_from_row": [[18, "cvpy-image-image-image-get-image-array-from-row"]], "cvpy.image.Image.Image.mask_image": [[19, "cvpy-image-image-image-mask-image"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[20, "cvpy-utils-casthreadtuner-casthreadtuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count": [[21, "cvpy-utils-casthreadtuner-casthreadtuner-tune-thread-count"]], "cvpy.visualization.display_3D_image_slices": [[22, "cvpy-visualization-display-3d-image-slices"]], "cvpy.visualization.display_3D_image_slices_from_array": [[23, "cvpy-visualization-display-3d-image-slices-from-array"]], "cvpy.visualization.display_3D_surface": [[24, "cvpy-visualization-display-3d-surface"]], "cvpy.visualization.display_image_slice": [[25, "cvpy-visualization-display-image-slice"]], "SAS Viya Computer Vision API for Python": [[26, "module-cvpy"]], "Overview": [[26, "overview"]], "Contributing": [[26, "contributing"]], "License": [[26, "license"], [28, "license"]], "Additional Resources": [[26, "additional-resources"]], "Table of Contents": [[26, "table-of-contents"]], "Index": [[26, "index"]], "Installation": [[27, "installation"]], "Prerequisites": [[27, "prerequisites"]], "Mayavi Installation": [[27, "mayavi-installation"]], "CVPy Installation": [[27, "cvpy-installation"]]}, "indexentries": {"casthreadtunerresults (class in cvpy.base.casthreadtunerresults)": [[1, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults"]], "__init__() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[1, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.__init__"]], "plot_exec_times() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[2, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times"]], "imagetable (class in cvpy.base.imagetable)": [[3, "cvpy.base.ImageTable.ImageTable"]], "__init__() (cvpy.base.imagetable.imagetable method)": [[3, "cvpy.base.ImageTable.ImageTable.__init__"]], "as_dict() (cvpy.base.imagetable.imagetable method)": [[4, "cvpy.base.ImageTable.ImageTable.as_dict"]], "has_decoded_images() (cvpy.base.imagetable.imagetable method)": [[5, "cvpy.base.ImageTable.ImageTable.has_decoded_images"]], "biomedimage (class in cvpy.biomedimage.biomedimage)": [[6, "cvpy.biomedimage.BiomedImage.BiomedImage"]], "__init__() (cvpy.biomedimage.biomedimage.biomedimage method)": [[6, "cvpy.biomedimage.BiomedImage.BiomedImage.__init__"]], "mask_image() (cvpy.biomedimage.biomedimage.biomedimage method)": [[7, "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image"]], "morphological_gradient() (cvpy.biomedimage.biomedimage.biomedimage method)": [[8, "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient"]], "quantify_sphericity() (cvpy.biomedimage.biomedimage.biomedimage method)": [[9, "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity"]], "image (class in cvpy.image.image)": [[10, "cvpy.image.Image.Image"]], "__init__() (cvpy.image.image.image method)": [[10, "cvpy.image.Image.Image.__init__"]], "convert_numpy_to_wide() (cvpy.image.image.image static method)": [[11, "cvpy.image.Image.Image.convert_numpy_to_wide"]], "convert_to_cas_column() (cvpy.image.image.image static method)": [[12, "cvpy.image.Image.Image.convert_to_CAS_column"]], "convert_wide_to_numpy() (cvpy.image.image.image static method)": [[13, "cvpy.image.Image.Image.convert_wide_to_numpy"]], "fetch_geometry_info() (cvpy.image.image.image static method)": [[14, "cvpy.image.Image.Image.fetch_geometry_info"]], "fetch_image_array() (cvpy.image.image.image static method)": [[15, "cvpy.image.Image.Image.fetch_image_array"]], "get_image_array() (cvpy.image.image.image static method)": [[16, "cvpy.image.Image.Image.get_image_array"]], "get_image_array_const_ctype() (cvpy.image.image.image static method)": [[17, "cvpy.image.Image.Image.get_image_array_const_ctype"]], "get_image_array_from_row() (cvpy.image.image.image static method)": [[18, "cvpy.image.Image.Image.get_image_array_from_row"]], "mask_image() (cvpy.image.image.image method)": [[19, "cvpy.image.Image.Image.mask_image"]], "casthreadtuner (class in cvpy.utils.casthreadtuner)": [[20, "cvpy.utils.CASThreadTuner.CASThreadTuner"]], "__init__() (cvpy.utils.casthreadtuner.casthreadtuner method)": [[20, "cvpy.utils.CASThreadTuner.CASThreadTuner.__init__"]], "tune_thread_count() (cvpy.utils.casthreadtuner.casthreadtuner static method)": [[21, "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count"]], "display_3d_image_slices() (in module cvpy.visualization)": [[22, "cvpy.visualization.display_3D_image_slices"]], "display_3d_image_slices_from_array() (in module cvpy.visualization)": [[23, "cvpy.visualization.display_3D_image_slices_from_array"]], "display_3d_surface() (in module cvpy.visualization)": [[24, "cvpy.visualization.display_3D_surface"]], "display_image_slice() (in module cvpy.visualization)": [[25, "cvpy.visualization.display_image_slice"]], "cvpy": [[26, "module-cvpy"]], "module": [[26, "module-cvpy"]]}})